service: aws-node-http-api-project
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  # To allow permission access on other resources (dynamodb)
  # From our functions (so they are allowed to access these
  # resources)
  iamRoleStatements:
    # What we want to to with this iam role statement (in this case allow)
    - Effect: Allow
      Action:
        # * is not recommended as it has too open permissions
        # Just for the sake of demonstration
        - dynamodb:*
      # Specify the resource (in this case, the tables on
      # dynamoDB we want to affect) to appply this permission on
      Resource:
        # Find the resource number in the AWS console (look for the dynamo db table id)
        # This unique identifier is the arn string on the dynamo's table
        -  arn:aws:dynamodb:us-east-1:619961278067:table/TodoTable

# Define your functions
functions:
  # A function handler name
  hello:
    # The actual function handler reference
    handler: src/hello.handler
    # Events list that trigger this handler
    events:
      # Run this function on httpApi on the path / on the method get
      - httpApi:
          path: /hello
          method: get
  addTodo:
    # The actual function handler reference
    handler: src/addTodo.handler
    # Events list that trigger this handler
    events:
      # Run this function on httpApi on the path / on the method get
      - httpApi:
          path: /
          method: post

# Cloudformation configuration (ourside aws resources we would want to provision)
resources:
  # In Cloudformation the capitalization is very important
  Resources:
    # Define the resource in AWS called (TodoTable)
    TodoTable:
      # This resource is going to be defined as a DynamoDB table
      Type: AWS::DynamoDB::Table
      # Define the properties of the DynamoDB table
      Properties:
        # The name of the table
        TableName: TodoTable
        # Specify the billing mode
        BillingMode: PAY_PER_REQUEST
        # Define a property with its name and its type (of the table)
        AttributeDefinitions:
          # Property name
          - AttributeName: id
          # Property type
            AttributeType: S
        # Specify the specified property (attribute) as a primary key (id)
        KeySchema:
          # Primary key
          - AttributeName: id
            # To specify that this is an ID
            KeyType: HASH